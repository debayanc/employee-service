apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
    tier: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      tier: backend
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        tier: backend
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup {{ .Chart.Name }}-mysql.{{ .Values.namespace }}.svc.cluster.local; do echo waiting for database; sleep 2; done;']
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8080
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        startupProbe:
          httpGet:
            path: /
            port: 8080
          failureThreshold: 5
          periodSeconds: 60
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 20
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: mysql-user-password
        - name: DB_SERVER
          value: {{ .Chart.Name }}-mysql
        - name: DB_DATABASENAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: mysql-database-name
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: mysql-user-username
        - name: DB_PORT
          value: '3306'